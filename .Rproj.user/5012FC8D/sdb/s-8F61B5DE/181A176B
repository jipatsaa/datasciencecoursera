{
    "contents" : "################################################################\n# LAST REVISION: 2014-12-19\n# AUTHOR: JIPATSAA\n# GOAL: Obtain for each Subject-Activity pair the mean value of each feature containing *(M/m)ean* or *(S/s)td*\n# PRE:  1) The library data.table must be installed.\n#       2) Internet conection is required since the data will be downloaded form the web\n#       The data contains the movement captures (in the X Y and Z dimentions) of 30 Subjects and \n#       the corresponding activity associated to those movements\n#       The data will be downloaded from \"https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip\"\n#       and unzip-ed and save in a NEW directory called ./data\n# POST: The result has been saved into the file called \"MeanAndStdValuesForEachSubject-Activity\")\n#       To recover it load(\"MeanAndStdValuesForEachSubject-Activity\")\n################################################################\nlibrary(data.table)\nsource(\"downloadFromURLAndUnzip.R\") #function to create ./data dir and download and unzip the data\nsource(\"readTable.R\") #function to read a file in the ./data/UCI HAR Dataset and dump it into a table\nactualPath<-getwd()\n\n#############################\n# 1 Step: Download the data\n#############################\n# Downlod the data from the https://d396qusza40orc.cloudfront.net website \n# the file getdata_projectfiles_UCI HAR Dataset.zip will be download and unziped\n# The information in this webpage was originally obtained from: http://archive.ics.uci.edu/ml/machine-learning-databases/00240/\n# so if the previous webpage is down data could also be downloaded from\n# fileUrl <-\"http://archive.ics.uci.edu/ml/machine-learning-databases/00240/UCI%20HAR%20Dataset.zip\"\n\n\nfileUrl <- \"https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip\"\n\ndataDir <- paste(actualPath,\"data\",sep=\"/\")\ndirDataSet<-paste(dataDir,\"UCI\\ HAR\\ Dataset\",sep=\"/\")#once it will be downloaded it will create this directory\n\nfileNameZIP <- \"HARdata.zip\"\nfilePathZIP <- paste(dataDir,fileNameZIP,sep=\"/\")\ndownloadFromURLAndUnzip(fileUrl,workdirPath=dataDir,fileName=fileNameZIP)\n\n# if there is any problem downloading from https://d396qusza40orc.cloudfront.net webpage try the original\nif(!file.exists(filePathZIP))\n{\n  fileUrl <-\"http://archive.ics.uci.edu/ml/machine-learning-databases/00240/UCI%20HAR%20Dataset.zip\"\n  downloadFromURLAndUnzip(fileUrl,workdirPath=dataDir,fileName=fileNameZIP)\n}\n\n###############################################\n# 2. OBTAIN GENERAL INFORMATION ABOUT THE ACTIVITY AND FEATURE CODES\n###############################################\n# OBTAIN ACTIVITY CODES AND DESCRIPTORS \n# (6 activities in total)\n# (activity_labels.txt) file containing the activity codes and descriptors i.e. 1 WALKING \n\nactivity<-readTable(dirDataSet,\"activity_labels.txt\")\nactList<-as.character(activity$V2) #getting the Strings corresponding to the codes\n\n\n# OBTAIN MOVEMENT FEATURES CODES AND DESCRIPTORS \n# (561 features in total)\n# (features.txt) file containing the descriptors of the movement features i.e. 1 tBodyAcc-mean()-X\n\nfeatures<-readTable(dirDataSet,\"features.txt\")\nfeatures<-features$V2 #we just want the 2nd column\n\n\n#OBTAIN TEST+TRAIN \n# (X_test.txt eta X_train.txt)\n# TEST:  dim=number of observations: 2947, number of processed movement features: 561\n# TRAIN: dim=number of observations: 7351, number of processed movement features: 561\n############################\ntrainProcessedFeatures<-readTable(dirDataSet,\"train/X_train.txt\")\ntestProcessedFeatures<-readTable(dirDataSet,\"test/X_test.txt\")\n\n############################\n# 3. MERGE TRAIN+TEST\n############################\ncorpProcessedFeatures<-rbind(trainProcessedFeatures,testProcessedFeatures) #Merge Test+Train obtaining the whole corpus (dataSet)\n\n\n############################\n# 4. ADD THE NAMES OF THE FEATURES\n############################\nnames(corpProcessedFeatures)<-as.character(features) #adding the names of the features to each column values\n\n# From all the features we want to process ONLY the ones refering to (M/m)ean and (S/s)tandard deviation features\n\n############################\n# 5. FILTER MEANS AND STD DEVIATIONS\n############################\n# get the indexes of the columns containing the words (M/m)ean or (S/s)td\nmeanInd<-grep(\"mean\",names(corpProcessedFeatures),ignore.case=TRUE)\nstdInd<-grep(\"std\",names(corpProcessedFeatures),ignore.case=TRUE)\nmeanStdInd<-c(meanInd,stdInd)\nmeanStdInd<-sort(meanStdInd)\n\n# filter those indx to obtain only the (M/m)ean and (S/s)td columns \ncorpMeanStdProcFeat<-subset(corpProcessedFeatures,select=meanStdInd) #equivalent corpProcessedFeatures[meanStdInd]\n\n\n#################################\n# 6. OBTAIN INF. ABOUT THE SUBJECTS\n#################################\n# (30 different subjects)\n# (subject_train.txt) file contains inf. about 21 subjects: 1  3  5  6  7  8 11 14 15 16 17 19 21 22 23 25 26 27 28 29 30\n# (subject_test.txt) file contains inf. about 9 subjects: 2  4  9 10 12 13 18 20 24\n#################################\ntrainfitx<-paste(dirDataSet,\"train/subject_train.txt\",sep=\"/\")\ntrainSubjects<-read.table(trainfitx)\ntestfitx<-paste(dirDataSet,\"test/subject_test.txt\",sep=\"/\")\ntestSubjects<-read.table(testfitx)\ncorpSubjs<-rbind(trainSubjects,testSubjects) #bind subjects inf. from test+train\n\n#################################\n# 7. OBTAIN CLASS INFORMATION (the class to guess)\n#################################\n# (Y_test.txt) file contains inf. about the class to guess in the clustering task\n#################################\ntrainfitx<-paste(dirDataSet,\"train/Y_train.txt\",sep=\"/\")\ntrainActivityCode<-read.table(trainfitx)\ntestfitx<-paste(dirDataSet,\"test/Y_test.txt\",sep=\"/\")\ntestActivityCode<-read.table(testfitx)\ntrainActivityDescriptor<-apply(trainActivityCode,1,function(x) as.character(actList[x]))\ntestActivityDescriptor<-apply(testActivityCode,1,function(x) as.character(actList[x]))\ncorpActivityDescriptor<-c(trainActivityDescriptor,testActivityDescriptor)\n\n###############################\n# 8. MERGE SUBJ+FEATURES+ACTIVITY INF.\n###############################\n# Merge the information about the subjects with their corresponding processed movement features and the activity associated to the subject in that moment\ncorpProcFeatActCode<-cbind(corpSubjs,corpMeanStdProcFeat,corpActivityDescriptor)\nnames(corpProcFeatActCode)<-c(\"subject\",as.character(names(corpMeanStdProcFeat)),\"activity\")\n\n#remove all auxiliary variables\nrm(features,trainSubjects,testSubjects,trainProcessedFeatures,testProcessedFeatures,trainActivityCode,testActivityCode,corpProcessedFeatures,corpActivityDescriptor,corpSubjs,meanInd,stdInd,meanStdInd)\n\n################################\n# 9. PROCESS THE DATA TO OBTAIN THE MEAN OF EACH FEAT. BY SUBJECT-ACTIVITY PAIR: \n#    1. Organize by Subject and Activity. \n#    2. Calculate the mean of each feature for each subject-activity pair\n################################\nDT<-data.table(corpProcFeatActCode)#convert the frame into a table to split it by subject and activity and apply the mean to each column\n\nres<-DT[, lapply(.SD,mean), by=list(subject,activity)]#.SD stands for subset data and it is used to apply the mean to every column of the table\n\nres[order(subject,activity)]#order de result by subject and actibity\n\nwrite.table(res, file =\"MeanAndStdValuesForEachSubject-Activity\",row.names=FALSE,sep=\" \") #write the result as tidy data\n\n##########################################\n# IN ANOTHER WAY\n# another way of calculating the mean of each varible, of each subject and activity type but over a frame. PROBLEM:\n# it gives back a \"by\" class object, that is to say, a list. And to get a \"tidy\" format it is not obvious. \n############################################\n#\n# result<-by(corpProcFeatActCode,list(Subject=corpProcFeatActCode$subject,activity=corpProcFeatActCode$activity), function(x){\n#   y <- subset(x, select= -subject)#remove subject\n#   z <- subset(y, select= -activity)#remove activity\n#   apply(z, 2, mean)\n# })",
    "created" : 1419191492398.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "214258901",
    "id" : "181A176B",
    "lastKnownWriteTime" : 1419198180,
    "path" : "~/Dropbox/3_Getting_and_Cleaning_Data/project/aitzi_v0/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}